openapi: 3.0.3
info:
  title: 'API Documentation for CRUD'
  description: 'This it CRUD Operation with Auth.'
  version: 1.0.0
servers:
  -
    url: 'http://nayan.pro'
paths:
  /api/categories:
    get:
      summary: 'Get a list of all categories.'
      operationId: getAListOfAllCategories
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'The page number (default is 1).'
          example: 14
          required: false
          schema:
            type: integer
            description: 'The page number (default is 1).'
            example: 14
        -
          in: query
          name: per_page
          description: 'The number of categories per page (default is 10).'
          example: 1
          required: false
          schema:
            type: integer
            description: 'The number of categories per page (default is 10).'
            example: 1
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"status\": \"success\",\n   \"data\": [\n       {\n           \"id\": 1,\n           \"name\": \"Category 1\",\n           \"des\": \"Description of Category 1\",\n           \"created_at\": \"2023-01-01 12:00:00\",\n           \"updated_at\": \"2023-01-01 12:30:00\"\n       },\n       // Other categories\n   ]\n}"
      tags:
        - Categories
      security: []
    post:
      summary: 'Create a new category.'
      operationId: createANewCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  data:
                    id: 2
                    name: 'New Category'
                    des: 'Description of New Category'
                    created_at: '2023-02-01 14:00:00'
                    updated_at: '2023-02-01 14:00:00'
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'New Category'
                      des:
                        type: string
                        example: 'Description of New Category'
                      created_at:
                        type: string
                        example: '2023-02-01 14:00:00'
                      updated_at:
                        type: string
                        example: '2023-02-01 14:00:00'
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the category.'
                  example: voluptatem
                des:
                  type: string
                  description: 'The description of the category.'
                  example: ea
              required:
                - name
                - des
      security: []
  '/api/categories/{category_id}':
    get:
      summary: 'Get details of a specific category.'
      operationId: getDetailsOfASpecificCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  data:
                    id: 1
                    name: 'Category 1'
                    des: 'Description of Category 1'
                    created_at: '2023-01-01 12:00:00'
                    updated_at: '2023-01-01 12:30:00'
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Category 1'
                      des:
                        type: string
                        example: 'Description of Category 1'
                      created_at:
                        type: string
                        example: '2023-01-01 12:00:00'
                      updated_at:
                        type: string
                        example: '2023-01-01 12:30:00'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Category not found'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Category not found'
      tags:
        - Categories
      security: []
    put:
      summary: 'Update a category.'
      operationId: updateACategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  data:
                    id: 2
                    name: 'Updated Category'
                    des: 'Updated Description'
                    created_at: '2023-02-01 14:00:00'
                    updated_at: '2023-02-01 15:00:00'
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Updated Category'
                      des:
                        type: string
                        example: 'Updated Description'
                      created_at:
                        type: string
                        example: '2023-02-01 14:00:00'
                      updated_at:
                        type: string
                        example: '2023-02-01 15:00:00'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Category not found'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Category not found'
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'max:255 The new name of the category.'
                  example: sit
                des:
                  type: string
                  description: 'The new description of the category.'
                  example: illum
              required:
                - name
      security: []
    delete:
      summary: 'Delete a category.'
      operationId: deleteACategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Category deleted successfully'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Category deleted successfully'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Category not found'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Category not found'
      tags:
        - Categories
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 9
        required: true
        schema:
          type: integer
  /api/links:
    get:
      summary: ''
      operationId: getApiLinks
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      category_id: 3
                      name: 'Deon Maggio'
                      url: 'http://www.abshire.com/maxime-in-non-doloremque-aut-odit-quos-quo'
                      category:
                        id: 3
                        name: 'Sheridan Veum'
                        des: 'Voluptatem quia consequatur unde in explicabo distinctio.'
                        file: myfile.jpeg
                    -
                      id: 2
                      category_id: 5
                      name: "Mr. Ludwig O'Keefe"
                      url: 'http://okon.com/officia-dolorem-dolor-quasi-debitis-qui-sit-fuga.html'
                      category:
                        id: 5
                        name: 'Ernestine Pfannerstill'
                        des: 'Alias dolor perferendis ducimus corrupti ut quisquam corrupti.'
                        file: myfile.jpeg
                    -
                      id: 3
                      category_id: 7
                      name: 'Mr. Conner Kub II'
                      url: 'http://www.murazik.com/est-non-quidem-voluptates-soluta.html'
                      category:
                        id: 7
                        name: 'Roma Hamill III'
                        des: 'Corporis qui autem repellat est earum nisi.'
                        file: myfile.jpeg
                    -
                      id: 4
                      category_id: 1
                      name: 'Jerel Spinka'
                      url: 'http://daugherty.com/provident-illo-aperiam-eos-harum-nam-veniam-nesciunt'
                      category:
                        id: 1
                        name: 'Aurore Reilly'
                        des: 'Quasi voluptatibus occaecati molestiae non sunt.'
                        file: myfile.jpeg
                    -
                      id: 5
                      category_id: 2
                      name: 'Craig Prohaska'
                      url: 'http://www.towne.info/dolores-sit-alias-asperiores-nobis-dolor'
                      category:
                        id: 2
                        name: 'Cordell Strosin'
                        des: 'A occaecati aliquid veritatis eius consequatur iste.'
                        file: myfile.jpeg
                  links:
                    first: 'http://nayan.pro/api/links?page=1'
                    last: 'http://nayan.pro/api/links?page=6'
                    prev: null
                    next: 'http://nayan.pro/api/links?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 6
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://nayan.pro/api/links?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://nayan.pro/api/links?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://nayan.pro/api/links?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://nayan.pro/api/links?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://nayan.pro/api/links?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://nayan.pro/api/links?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://nayan.pro/api/links?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://nayan.pro/api/links'
                    per_page: 5
                    to: 5
                    total: 30
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        category_id: 3
                        name: 'Deon Maggio'
                        url: 'http://www.abshire.com/maxime-in-non-doloremque-aut-odit-quos-quo'
                        category:
                          id: 3
                          name: 'Sheridan Veum'
                          des: 'Voluptatem quia consequatur unde in explicabo distinctio.'
                          file: myfile.jpeg
                      -
                        id: 2
                        category_id: 5
                        name: "Mr. Ludwig O'Keefe"
                        url: 'http://okon.com/officia-dolorem-dolor-quasi-debitis-qui-sit-fuga.html'
                        category:
                          id: 5
                          name: 'Ernestine Pfannerstill'
                          des: 'Alias dolor perferendis ducimus corrupti ut quisquam corrupti.'
                          file: myfile.jpeg
                      -
                        id: 3
                        category_id: 7
                        name: 'Mr. Conner Kub II'
                        url: 'http://www.murazik.com/est-non-quidem-voluptates-soluta.html'
                        category:
                          id: 7
                          name: 'Roma Hamill III'
                          des: 'Corporis qui autem repellat est earum nisi.'
                          file: myfile.jpeg
                      -
                        id: 4
                        category_id: 1
                        name: 'Jerel Spinka'
                        url: 'http://daugherty.com/provident-illo-aperiam-eos-harum-nam-veniam-nesciunt'
                        category:
                          id: 1
                          name: 'Aurore Reilly'
                          des: 'Quasi voluptatibus occaecati molestiae non sunt.'
                          file: myfile.jpeg
                      -
                        id: 5
                        category_id: 2
                        name: 'Craig Prohaska'
                        url: 'http://www.towne.info/dolores-sit-alias-asperiores-nobis-dolor'
                        category:
                          id: 2
                          name: 'Cordell Strosin'
                          des: 'A occaecati aliquid veritatis eius consequatur iste.'
                          file: myfile.jpeg
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        category_id:
                          type: integer
                          example: 3
                        name:
                          type: string
                          example: 'Deon Maggio'
                        url:
                          type: string
                          example: 'http://www.abshire.com/maxime-in-non-doloremque-aut-odit-quos-quo'
                        category:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 3
                            name:
                              type: string
                              example: 'Sheridan Veum'
                            des:
                              type: string
                              example: 'Voluptatem quia consequatur unde in explicabo distinctio.'
                            file:
                              type: string
                              example: myfile.jpeg
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://nayan.pro/api/links?page=1'
                      last:
                        type: string
                        example: 'http://nayan.pro/api/links?page=6'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://nayan.pro/api/links?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 6
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://nayan.pro/api/links?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://nayan.pro/api/links?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://nayan.pro/api/links?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://nayan.pro/api/links?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://nayan.pro/api/links?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://nayan.pro/api/links?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://nayan.pro/api/links?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://nayan.pro/api/links'
                      per_page:
                        type: integer
                        example: 5
                      to:
                        type: integer
                        example: 5
                      total:
                        type: integer
                        example: 30
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Categories
    description: "\nAPIs for managing user Categories."
  -
    name: Endpoints
    description: ''
